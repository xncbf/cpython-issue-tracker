# Generated by Django 4.2.4 on 2023-09-17 07:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Label",
            fields=[
                ("color", models.CharField(max_length=6)),
                ("default", models.BooleanField()),
                ("description", models.TextField(blank=True, null=True)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=200)),
                ("node_id", models.CharField(max_length=100)),
                ("url", models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name="PullRequest",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("url", models.URLField()),
                ("html_url", models.URLField()),
                ("diff_url", models.URLField()),
                ("patch_url", models.URLField()),
                ("merged_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("login", models.CharField(max_length=100)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("node_id", models.CharField(max_length=100, unique=True)),
                ("avatar_url", models.URLField()),
                ("gravatar_id", models.CharField(blank=True, max_length=100)),
                ("url", models.URLField()),
                ("html_url", models.URLField()),
                ("followers_url", models.URLField()),
                ("following_url", models.URLField()),
                ("gists_url", models.URLField()),
                ("starred_url", models.URLField()),
                ("subscriptions_url", models.URLField()),
                ("organizations_url", models.URLField()),
                ("repos_url", models.URLField()),
                ("events_url", models.URLField()),
                ("received_events_url", models.URLField()),
                ("type", models.CharField(max_length=100)),
                ("site_admin", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                ("active_lock_reason", models.CharField(blank=True, max_length=200, null=True)),
                ("author_association", models.CharField(max_length=50)),
                ("body", models.TextField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                ("comments", models.PositiveIntegerField()),
                ("comments_url", models.URLField()),
                ("created_at", models.DateTimeField()),
                ("draft", models.BooleanField(null=True)),
                ("events_url", models.URLField()),
                ("html_url", models.URLField()),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("is_issue", models.BooleanField(default=True)),
                ("labels_url", models.URLField()),
                ("locked", models.BooleanField()),
                ("milestone", models.CharField(blank=True, max_length=200, null=True)),
                ("node_id", models.CharField(max_length=100)),
                ("number", models.PositiveIntegerField()),
                ("performed_via_github_app", models.CharField(blank=True, max_length=200, null=True)),
                ("reactions", models.JSONField()),
                ("repository_url", models.URLField()),
                ("state", models.CharField(max_length=50)),
                ("state_reason", models.CharField(blank=True, max_length=200, null=True)),
                ("timeline_url", models.URLField()),
                ("title", models.CharField(max_length=200)),
                ("updated_at", models.DateTimeField()),
                ("url", models.URLField()),
                (
                    "assignee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="app.user",
                    ),
                ),
                ("assignees", models.ManyToManyField(related_name="+", to="app.user")),
                ("labels", models.ManyToManyField(related_name="issues", to="app.label")),
                (
                    "pull_request",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="app.pullrequest"
                    ),
                ),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app.user")),
            ],
        ),
    ]
